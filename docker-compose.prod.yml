services:
  client:
    build:
      context: .
      dockerfile: client/Dockerfile
      target: runner
      platforms:
        - linux/arm64  # Raspberry Pi 4 compatibility
    image: veridian-os-client:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - veridian-network

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
      target: runner
      platforms:
        - linux/arm64  # Raspberry Pi 4 compatibility
    image: veridian-os-server:latest
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/veridian.db
    volumes:
      - ./data:/app/data
    devices:
      - /dev/tty.usbmodem1101:/dev/tty.usbmodem1101  # macOS Arduino device
      - /dev/ttyUSB0:/dev/ttyUSB0  # Linux Arduino device (Pi 4)
      - /dev/ttyACM0:/dev/ttyACM0  # Linux Arduino device (Pi 4)
    privileged: true  # Required for serial port access
    restart: unless-stopped
    networks:
      - veridian-network

  # Optional: Add a reverse proxy for production (modify ports for non-root)
  nginx:
    image: nginx:alpine
    profiles:
      - with-nginx  # Only start nginx when specifically requested
    ports:
      - "8080:80"   # Use non-privileged port 8080 instead of 80
      - "8443:443"  # Use non-privileged port 8443 instead of 443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      - client
      - server
    restart: unless-stopped
    networks:
      - veridian-network

volumes:
  data:
    driver: local

networks:
  veridian-network:
    driver: bridge
